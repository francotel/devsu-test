version: 0.2
env:
  secrets-manager:
    LOGIN: $ENV_CB_SONAR:$ENV_CB_SONAR_TOKEN
    HOST: $ENV_CB_SONAR:$ENV_CB_SONAR_HOST
    Organization: $ENV_CB_SONAR:$ENV_CB_SONAR_ORGANIZATION
    Project: $ENV_CB_SONAR:$ENV_CB_SONAR_PROJECT
phases:
  install:
    runtime-versions:
      java: corretto17
  pre_build:
    commands:
      - apt-get update
      - apt-get install -y jq
      - wget -nv https://downloads.apache.org/maven/maven-3/3.9.3/binaries/apache-maven-3.9.3-bin.tar.gz
      - tar xzf apache-maven-3.9.3-bin.tar.gz
      - ln -s apache-maven-3.9.3 maven
      - wget -nv https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-3.3.0.1492-linux.zip
      - unzip ./sonar-scanner-cli-3.3.0.1492-linux.zip
      - export PATH=$PATH:/sonar-scanner-3.3.0.1492-linux/bin/
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION)
  build:
    commands:
      - cd demo-devops-java
      - mvn clean test    
      - mvn sonar:sonar -Dsonar.login=$LOGIN -Dsonar.host.url=$HOST -Dsonar.projectKey=$Project -Dsonar.organization=$Organization
      - sleep 5
      - curl https://sonarcloud.io/api/qualitygates/project_status?projectKey=$Project > result.json
      - cat result.json
      - if [ $(jq -r '.projectStatus.status' result.json) = ERROR ] ; then $CODEBUILD_BUILD_SUCCEEDING -eq 0 ;fi
      - echo Build started on `date`
      - echo Building the Docker image...
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...